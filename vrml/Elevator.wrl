#VRML V2.0 utf8

Switch 
{
	choice
	[
		DEF	ElevatorDoor Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "Door.jpg"
				}
			}
			geometry Box {
	
				size 2.0 5.0 0.15
			}

		}

		DEF	ElevatorFloor Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "Floor.jpg"
				}
			}
			geometry Box {
	
				size 4.0 0.15 4.0
			}

		}

		DEF	ElevatorWall Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "Interior.jpg"
				}
			}
			geometry Box {
	
				size 0.15 5.0 4.0
			}

		}

		DEF	HotelWall Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "Wall.jpg"
				}
			}
			geometry Box {
	
				size 10.0 5.0 0.10
			}

		}

		DEF	DoorsButton Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "CloseElevator.png"
				}
			}
			geometry Box {
	
				size 0.5 0.5 0.10
			}

		}

		DEF	GoUpButton Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "UpwardsButton.png"
				}
			}
			geometry Box {
	
				size 0.5 0.5 0.10
			}

		}

		DEF	CallButton Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "CallElevator.jpg"
				}
			}
			geometry Box {
	
				size 0.5 0.85 0.12
			}

		}

		DEF	HotelFloor Shape {

			appearance Appearance{
				material Material{
		
				}
				texture ImageTexture {
					url "HotelFloor.jpg"
				}
			}
			geometry Box {
	
				size 20.0 0.10 15.0
			}

		}
	]
}

DEF	ElevatorLDoor Transform
{
	children
	[
			Transform {
					translation	-4.1 0.0 0.0
					children[
						USE	ElevatorDoor		
					]

		}
		
	]
}

DEF	ElevatorRDoor Transform
{
	children
	[
		Transform {
					translation	2.05 0.0 0.0
					children[
						USE	ElevatorDoor		
					]

		}
	
	]
}

DEF	Elevator Transform
{
	
	children
	[
		Transform {
					translation	-1 2.5 -1.95
					children[
						USE	ElevatorFloor		
					]

		}

		Transform {
					translation	-1 -2.5 -1.95
					children[
						USE	ElevatorFloor		
					]

		}

		Transform {
					translation	-3.0 0.0 -2.0
					children[
						USE	ElevatorWall		
					]

		}

		Transform {
					translation	1.0 0.0 -2.0
					children[
						USE	ElevatorWall		
					]

		}

		Transform {
					rotation 0 1 0 1.57
					translation	-1.0 0.0 -4.0
					children[
						USE	ElevatorWall		
					]

				}	
	] 
}


	DEF	HotelWalls Transform {
		children [
			Transform {
								translation	-8.1 0.0 0.0
								children[
									USE	HotelWall		
								]

							}

			Transform {
								translation	6.05 0.0 0.0
								children[
									USE	HotelWall		
								]

							}

			Transform {
								translation	0.0 -2.55 7.35
								children[
									USE	HotelFloor		
								]

							}
						]
		}


	DEF	CloseButton Transform {
			children
			[
		Transform {
			translation	-5.5 0.0 0.0
			children[
				USE	DoorsButton		
			]

			}
			DEF	closeDoors TouchSensor {}
		]

	}

	DEF	UpwardsButton Transform {
			children
			[
		Transform {
			translation	-5.5 -0.75 0.0
			children[
				USE	GoUpButton		
			]

			}
				DEF	goUpwards TouchSensor {}
		]
	}

	DEF	CallElevator Transform {
			children
			[
		Transform {
			translation	3.5 0.0 0.0
			children[
				USE	CallButton		
			]

			}

			DEF	goDownwards TouchSensor {}
		]
	}


				
DEF	LeftDoorSensor TimeSensor {
	cycleInterval 1.0
    loop FALSE
    startTime -1.0
    stopTime  0.0
}

DEF CloseLeftDoor PositionInterpolator {
    key [ 0.0, 1.0 ]
    keyValue [
        0.0 0.0 0.0,
        2.05 0.0 0.0,
    ]
}

DEF	RightDoorSensor TimeSensor {
	cycleInterval 1.0
    loop FALSE
    startTime -1.0
    stopTime  0.0
}

DEF CloseRightDoor PositionInterpolator {
    key [ 0.0, 1.0 ]
    keyValue [
        0.0 0.0 0.0,
        -2.05 0.0 0.0,
    ]
}

DEF ElevatorSensor TimeSensor {
    cycleInterval 2.0
    loop FALSE
    startTime -1.0
    stopTime  0.0
}

DEF CallBackSensor TimeSensor {
    cycleInterval 2.0
    loop FALSE
    startTime -1.0
    stopTime  0.0
}

DEF	RDGoUp PositionInterpolator	{
	key [ 0.0, 2.0 ]
    keyValue [
        -2.05 0.0 0.0,
        -2.05 20.0 0.0,
    ]
}

DEF	LDGoUp PositionInterpolator	{
	key [ 0.0, 2.0 ]
    keyValue [
        2.05 0.0 0.0,
        2.05 20.0 0.0,
    ]
}

DEF GoUp PositionInterpolator {
    key [ 0.0, 2.0 ]
    keyValue [
        0.0 0.0 0.0,
        0.0 20.0 0.0,
    ]
}

DEF	RDGoDown PositionInterpolator	{
	key [ 0.0, 2.0 ]
    keyValue [
        -2.05 20.0 0.0,
        -2.05 -20.0 0.0,
    ]
}

DEF	LDGoDown PositionInterpolator	{
	key [ 0.0, 2.0 ]
    keyValue [
        2.05 20.0 0.0,
        2.05 -20.0 0.0,
    ]
}

DEF GoDown PositionInterpolator {
    key [ 0.0, 2.0 ]
    keyValue [
        0.0 20.0 0.0,
        0.0 -20.0 0.0,
    ]
}


ROUTE closeDoors.touchTime TO LeftDoorSensor.startTime
ROUTE closeDoors.touchTime TO RightDoorSensor.startTime

ROUTE goUpwards.touchTime TO ElevatorSensor.startTime
ROUTE goDownwards.touchTime TO CallBackSensor.startTime

ROUTE LeftDoorSensor.fraction_changed TO CloseLeftDoor.set_fraction
ROUTE CloseLeftDoor.value_changed TO ElevatorLDoor.set_translation

ROUTE RightDoorSensor.fraction_changed TO CloseRightDoor.set_fraction
ROUTE CloseRightDoor.value_changed TO ElevatorRDoor.set_translation

ROUTE ElevatorSensor.fraction_changed  TO GoUp.set_fraction
ROUTE ElevatorSensor.fraction_changed  TO RDGoUp.set_fraction
ROUTE ElevatorSensor.fraction_changed  TO LDGoUp.set_fraction

ROUTE CallBackSensor.fraction_changed  TO GoDown.set_fraction
ROUTE CallBackSensor.fraction_changed  TO RDGoDown.set_fraction
ROUTE CallBackSensor.fraction_changed  TO LDGoDown.set_fraction

ROUTE GoUp.value_changed TO	Elevator.set_translation
ROUTE RDGoUp.value_changed TO ElevatorRDoor.set_translation
ROUTE LDGoUp.value_changed TO ElevatorLDoor.set_translation

ROUTE GoDown.value_changed TO Elevator.set_translation
ROUTE RDGoDown.value_changed TO ElevatorRDoor.set_translation
ROUTE LDGoDown.value_changed TO ElevatorLDoor.set_translation




